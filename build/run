#!/usr/bin/env bash

## KNOWN ISSUE
#
# This code results in the signing key passphrase showing up in the build
# console. To this I say "fuck it." The process for hiding it was so broken
# and the security implications were minimal. I decided it was not worth the
# effort. At least it's not in source control.

set -ex

if [ ! -r /secrets/signing_key_passphrase ]; then
  echo 'File not found: /secrets/signing_key_passphrase'
  exit 1
fi

if [ ! -r /secrets/signing_subkey_fingerprint ]; then
  echo 'File not found: /secrets/signing_subkey_fingerprint'
  exit 1
fi

if [ -z "$NGINX_PACKAGE_VERSION" ]; then
  echo 'NGINX_PACKAGE_VERSION not set'
  exit 1
fi

if [ -z "$NGINX_MODULE_REF" ]; then
  echo 'NGINX_MODULE_REF not set'
  exit 1
fi

if [ -z "$PATCH_VERSION" ]; then
  echo 'PATCH_VERSION not set'
  exit 1
fi

if [ -z "$LSB_CODENAME" ]; then
  echo 'LSB_CODENAME not set'
  exit 1
fi

signing_key_fingerprint=$(cat /secrets/signing_subkey_fingerprint)
signing_key_passphrase=$(cat /secrets/signing_key_passphrase)

upstream_version=$(echo $NGINX_PACKAGE_VERSION | cut -f 1 -d '-')
debian_revision=$(echo $NGINX_PACKAGE_VERSION | cut -f 2 -d '-' | awk -F 'ubuntu' '{print $1}')
package_dir=/build/nginx-$upstream_version

cd $package_dir

let new_debian_revision=$debian_revision+1
evertrue_package_version="$upstream_version-$new_debian_revision$(cat /build/EVERTRUE_RELEASE)"

# Build the silly changelog

cat > $package_dir/debian/changelog.new << EOF
nginx ($evertrue_package_version) $LSB_CODENAME; urgency=medium

EOF

cat /build/CHANGES >> $package_dir/debian/changelog.new
cat >> $package_dir/debian/changelog.new << EOF

 -- Evertrue DevOps <devops+debian@evertrue.com> $(date "+%a, %d %b %Y %H:%M:%S %z")

EOF

cat $package_dir/debian/changelog >> \
    $package_dir/debian/changelog.new

mv $package_dir/debian/changelog.new \
   $package_dir/debian/changelog

# Add the module
curl -s -L https://github.com/yaoweibin/nginx_upstream_check_module/archive/$NGINX_MODULE_REF.zip \
  -o /build/nginx_upstream_check_module.zip
mkdir /tmp/nginx_module
unzip /build/nginx_upstream_check_module.zip -d /tmp/nginx_module
mv /tmp/nginx_module/nginx_upstream_check_module-$NGINX_MODULE_REF \
  $package_dir/debian/modules/nginx_upstream_check_module
patch -p0 -d $package_dir/debian < /build/nginx-$upstream_version-rules.patch

# Add the patch
mv $package_dir/debian/modules/nginx_upstream_check_module/check_$PATCH_VERSION+.patch \
  $package_dir/debian/patches/nginx_upstream_check_module.patch
echo "nginx_upstream_check_module.patch" >> $package_dir/debian/patches/series

# Patch the patch -- for some reason modifications are needed in order for this patch to apply
if [ -f /build/nginx-$upstream_version-patch.patch ]; then
  patch -p0 < /build/nginx-$upstream_version-patch.patch
fi

patch_file=$package_dir/debian/patches/nginx_upstream_check_module.patch

# For some stupid reason nginx_upstream_check_module could not manage to normalize the
# patch level across versions so we have to try to detect it.
if grep -q '^--- a\/' $patch_file && grep -q '^+++ b\/' $patch_file; then
  patch_level=1
else
  patch_level=0
fi

patch -p$patch_level < $patch_file

gpg --import /secrets/evertrue_apt_pub.gpg
gpg --allow-secret-key-import --import /secrets/evertrue_apt_sec.gpg

# Do the build (TODO: Consider switching to debuild)
dpkg-buildpackage -b -uc

dpkg-sig \
  -k $signing_key_fingerprint \
  -g "--passphrase ${signing_key_passphrase} --digest-algo SHA512 --batch --no-use-agent" \
  --sign evertrue \
  "/build/nginx-common_${evertrue_package_version}_all.deb"

dpkg-sig \
  -k $signing_key_fingerprint \
  -g "--passphrase ${signing_key_passphrase} --digest-algo SHA512 --batch --no-use-agent" \
  --sign evertrue \
  "/build/nginx-full_${evertrue_package_version}_amd64.deb"

# # Upload built artifacts to S3
deb-s3 upload \
  --arch amd64 \
  --codename $LSB_CODENAME \
  --sign $signing_key_fingerprint \
  --gpg-options "--passphrase ${signing_key_passphrase} --digest-algo SHA512 --batch --no-use-agent" \
  --prefix debian-repo \
  --bucket ops.evertrue.com \
  "/build/nginx-full_${evertrue_package_version}_amd64.deb"

deb-s3 upload \
  --arch amd64 \
  --codename $LSB_CODENAME \
  --sign $signing_key_fingerprint \
  --gpg-options "--passphrase ${signing_key_passphrase} --digest-algo SHA512 --batch --no-use-agent" \
  --prefix debian-repo \
  --bucket ops.evertrue.com \
  "/build/nginx-common_${evertrue_package_version}_all.deb"
